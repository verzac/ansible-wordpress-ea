---
# ssl-ify using certbot
- name: Ensure ufw is present
  apt:
    name: ufw
    state: present
    update_cache: yes

- name: Install nginx
  apt:
    name: nginx
    state: present
    update_cache: true

- name: Let UFW permit NGINX traffic
  ufw: 
    rule: allow
    name: Nginx Full

- name: Cleanup UFW
  ufw:
    rule: allow
    name: Nginx HTTP
    delete: yes

- name: Add certbot's repository
  apt_repository:
    repo: ppa:certbot/certbot
    state: present
    update_cache: yes

- name: Install certbot
  apt:
    name: certbot
    state: present
    update_cache: true

- name: setup nginx directories
  file:
    path: "{{ letsencrypt['challenge_dir'] }}/.well-known/acme-challenge"
    state: directory
    owner: "{{ system_user }}"
    group: "{{ system_user }}"
    recurse: yes
    mode: 0755

- name: deploy letsencrypt snippet
  template:
    src: snippets_letsencrypt.conf.j2
    dest: /etc/nginx/snippets/letsencrypt.conf

- name: deploy ssl snippet
  template:
    src: snippets_ssl.conf.j2
    dest: /etc/nginx/snippets/ssl.conf

- name: clear sites-enabled for nginx
  file:
    path: "/etc/nginx/sites-enabled"
    state: absent

- name: recreate sites-enabled
  file:
    path: "/etc/nginx/sites-enabled"
    state: directory
    mode: 0755

- name: deploy initial nginx config to verify using certbot
  template:
    src: wpdockersite_init.conf.j2
    dest: /etc/nginx/sites-available/wpdockersite.conf

- name: create symlink for nginx config in sites-enabled
  file:
    src: "/etc/nginx/sites-available/wpdockersite.conf"
    path: "/etc/nginx/sites-enabled/wpdockersite.conf"
    state: link
    owner: "{{ system_user }}"
    group: "{{ system_user }}"
    mode: 0744
  notify: restart nginx  

- name: Restart NGINX to allow certbot to verify
  service:
    name: nginx
    state: restarted

- name: Retrieve certificate using certbot
  # command: certbot certonly --standalone --non-interactive --agree-tos --email {{ email }} -d {{ domain }} -d www.{{ domain }} --expand
  command: certbot certonly --non-interactive --expand --webroot --agree-tos --no-eff-email --email {{ email }} -w {{ letsencrypt['challenge_dir'] }} -d {{ domain }} -d www.{{ domain }}
  notify: restart nginx

- name: Add cron job to automatically attempt to renew cert daily
  template:
    src: cron_certbotrenew.j2
    dest: /etc/cron.daily/certbot_renew
    mode: 0755
  notify: restart nginx

- name: copy actual nginx config for wp docker
  template:
    src: wpdockersite.conf.j2
    dest: /etc/nginx/sites-available/wpdockersite.conf
  notify: restart nginx
